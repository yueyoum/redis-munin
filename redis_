#!/bin/bash
#
# The following code is released in public domain (where applicable).
# http://creativecommons.org/publicdomain/zero/1.0/

#%# family=auto
#%# capabilities=autoconf suggest

PATH=$PATH:/usr/local/bin

ip=$(echo $0 | awk -F_ '{ print $2 }')
port=$(echo $0 | awk -F_ '{ print $3 }')

[ -z "$ip" ] && ip=127.0.0.1
[ -z "$port" ] && port=6379

# add the ability to set a password in a respective config file
if [ -z "$password" ]; then
    passwd='' # no password was configured
else
    passwd="-a $password"
fi

if [ "$1" = "autoconf" ]; then
    redis-cli -h $ip -p $port $passwd info >/dev/null 2>&1 && echo yes && exit 0
    echo no
    exit 0
fi

if [ "$1" = "suggest" ]; then
    redis-cli -h $ip -p $port $passwd info >/dev/null 2>&1 && echo ${ip}_${port}
    exit 0
fi

if [ "$1" = "config" ]; then
    # Expose all possibles graphes according to server's capabilities
    redis-cli -h $ip -p $port $passwd info | awk -F: '

    /^changes_since_last_save:/ {
        print "multigraph redis_changes_since_last_save";
        print "graph_title Redis changes since last save" ;
        print "graph_info Number of write operations since last SAVE or BGSAVE";
        print "graph_category redis";
        print "changes.label changes";
    };

    /^keyspace_hits:/ {
        print "multigraph redis_commands";
        print "graph_args --base 1000 -l 0"
        print "graph_order commands hits misses";
        print "graph_title Redis commands rate";
        print "graph_category redis";
        print "graph_vlabel commands/s";
        print "graph_info Redis commands per second";
        print "commands.label commands/s";
        print "commands.draw LINE1";
        print "commands.info commands/s";
        print "hits.label key hits";
        print "hits.draw LINE1";
        print "hits.info key hits";
        print "misses.label key misses";
        print "misses.draw LINE1";
        print "misses.info key misses";
    };


    /^used_memory:/ {
        print "multigraph redis_memory";
        print "graph_args --base 1024 -l 0";
        print "graph_order memory rss"
        print "graph_title Redis memory usage";
        print "graph_category redis";
        print "graph_vlabel mem used";
        print "graph_info Memory allocated by Redis";
        print "memory.label memory";
        print "memory.draw LINE1";
        print "memory.info Amount of mem used by Redis";
        print "rss.label rss";
        print "rss.draw LINE1";
        print "rss.info Amount of rss mem used by Redis";
    };

    /^connected_clients:/ {
        print "multigraph redis_clients";
        print "graph_title Redis connected clients";
        print "graph_category redis";
        print "graph_vlabel clients";
        print "graph_info Number of currently connected clients";
        print "clients.label clients";
        print "clients.draw LINE1";
    };

    /^mem_fragmentation_ratio:/ {
        print "multigraph redis_fragmentation";
        print "graph_title Redis memory fragmentation";
        print "graph_category redis";
        print "graph_vlabel fragmentation ratio";
        print "graph_info Ratio between Redis RSS usage and allocated memory";
        print "frag.label fragmentation ratio";
        print "frag.draw LINE1";
    };

    /^expired_keys:/ {
        print "multigraph redis_expired_keys";
        print "graph_title Redis expired keys rate";
        print "graph_category redis";
        print "graph_vlabel expired keys/s";
        print "graph_info Expired Redis keys per second";
        print "expired.label expired keys";
        print "expired.draw LINE1";
        print "expired.info expired keys per second";
    };

    /^evicted_keys:/ {
        print "multigraph redis_evicted_keys";
        print "graph_title Redis evicted keys rate";
        print "graph_category redis";
        print "graph_vlabel evicted keys/s";
        print "graph_info Evicted Redis keys per second";
        print "evicted.label evicted keys";
        print "evicted.draw LINE1";
        print "evicted.info evicted keys per second";
    };

    /^pubsub_channels:/ {
        print "multigraph redis_pubsub_channels";
        print "graph_title Redis pubsub channels";
        print "graph_category redis";
        print "graph_vlabel channels";
        print "graph_info Number of pubsub channels";
        print "channels.label channels";
        print "channels.draw LINE1";
    };

    /^blocked_clients:/ {
        print "multigraph redis_blocked_clients";
        print "graph_title Redis blocked clients";
        print "graph_category redis";
        print "graph_vlabel clients";
        print "graph_info Number of blocked clients";
        print "blocked.label clients";
        print "blocked.draw LINE1";
        print "blocked.warning 1";
    };

    /^db/ {
        split($2, where, "=|,");
        dbskeys[$1]    = where[2];
        dbsexpires[$1] = where[4];
    };

    END {
        print "multigraph redis_dbs";
        print "graph_args --base 1000 -l 0"
        print "graph_title Redis dbs";
        print "graph_category redis";
        print "graph_vlabel keys";
        print "graph_info Number of keys per dbs";

        for (i in dbskeys)
            print i "keys.label " i " keys"
            print i "keys.draw LINE1"
            print i "expires.label " i " expired keys"
            print i "expires.draw LINE1"
    };

    '
    exit $?
fi

redis-cli -h $ip -p $port $passwd info | awk -F: '

    /^changes_since_last_save:/ {
        print "multigraph redis_changes_since_last_save";
        print "changes.value " $2 ;
    };

    /^used_memory:/ {
        memory=$2
    };

    /^used_memory_rss:/ {
        rss=$2
    };

    /^connected_clients:/ {
        print "multigraph redis_clients";
        print "clients.value " $2 ;
    };

    /^mem_fragmentation_ratio:/ {
        print "multigraph redis_fragmentation";
        print "frag.value " $2 ;
    };

    /^expired_keys:/ {
        print "multigraph redis_expired_keys";
        print "expired.value " $2 ;
    };

    /^evicted_keys:/ {
        print "multigraph redis_evicted_keys";
        print "evicted.value " $2 ;
    };

    /^pubsub_channels:/ {
        print "multigraph redis_pubsub_channels";
        print "channels.value " $2 ;
    };

    /^blocked_clients:/ {
        print "multigraph redis_blocked_clients";
        print "blocked.value " $2 ;
    };

    /^total_commands_processed:/ {
        commands=$2
    };

    /^keyspace_hits:/ {
        hits=$2
    };

    /^keyspace_misses:/ {
        misses=$2
    };

    /^db/ {
        split($2, where, "=|,");
        dbskeys[$1]    = where[2];
	dbsexpires[$1] = where[4];
    };

    END {
        print "multigraph redis_memory";
        print "memory.value " memory;
        print "rss.value " rss;
        print "multigraph redis_commands";
        print "commands.value " commands;
        print "hits.value " hits;
        print "misses.value " misses;

        print "multigraph redis_dbs";
        for (i in dbskeys)
            print i "keys.value "    dbskeys[i]
            print i "expires.value " dbsexpires[i];
    };
'

